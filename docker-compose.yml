services:
  mysql:
    image: mysql:latest
    container_name: mysql-container
    environment:
      MYSQL_DATABASE: red_db
      MYSQL_ROOT_PASSWORD: ""
      MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - mynetwork
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 5s
      retries: 5
      start_period: 10s
  minio:
    image: minio/minio
    container_name: minio-container
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - mysql_data:/data
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
      MINIO_DEFAULT_BUCKETS: red-bucket
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
    command: server --console-address ":9001" /data
    networks:
      - mynetwork
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: nest_app
    restart: always
    environment:
      DB_HOST: mysql
      DB_PORT: 3306
      DB_USERNAME: root
      DB_PASSWORD:
      DB_NAME: red_db
      JWT_SECRET_KEY: HHGk6D8K_Y6TaWuIK6HHdw
      JWT_EXPIRATION_TIME: 2h
      NODE_ENV: production
      MINIO_ENDPOINT: minio
      MINIO_PORT: 9000
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin
      MINIO_BUCKET_NAME: red-bucket
      MINIO_SECURE: false
    depends_on:
      mysql:
        condition: service_healthy
      minio:
        condition: service_healthy
    ports:
      - "3000:3000"
    networks:
      - mynetwork
volumes:
  mysql_data:

networks:
  mynetwork:
